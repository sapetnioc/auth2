#!/bin/bash
set -e

psql -v ON_ERROR_STOP=1 <<-EOSQL
DO \$\$
  DECLARE q TEXT;
BEGIN
  q := 'CREATE USER ${KEYCLOAK_DB_USER} WITH PASSWORD ''' || pg_read_file('/run/secrets/keycloak-db-password') || '''';
  EXECUTE q;
  q := 'CREATE USER ${AUTH2_DB_USER} WITH PASSWORD ''' || pg_read_file('/run/secrets/auth2-db-password') || '''';
  EXECUTE q;
END \$\$;

CREATE DATABASE ${KEYCLOAK_DB} WITH OWNER ${KEYCLOAK_DB_USER};
CREATE DATABASE ${AUTH2_DB};
EOSQL

psql -v ON_ERROR_STOP=1 --dbname ${KEYCLOAK_DB} <<-EOSQL
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO ${KEYCLOAK_DB};
EOSQL

# CREATE OR REPLACE FUNCTION api.rest()
#  RETURNS text
# AS \$\$
#     import requests, json
#     try:
#         r = requests.get("https://api.restful-api.dev/objects")
#     except Exception as e:
#         return e
#     else:
#         return r.content
# \$\$ LANGUAGE plpython3u;

psql -v ON_ERROR_STOP=1 --dbname ${AUTH2_DB} <<-EOSQL
CREATE EXTENSION plpython3u;
CREATE SCHEMA api;

CREATE TABLE api.dataset (
  id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  name TEXT NOT NULL,
  description TEXT
);

INSERT INTO api.dataset (name, description) VALUES
('localiser-amri', 'Anatomical T1 MRI of Localiser'),
('localiser-fmri', 'Functional MRI of Localiser'),
('localiser-dmri', 'Diffusion weighted MRI of Localiser');

CREATE ROLE web_anon NOLOGIN;
GRANT web_anon TO ${AUTH2_DB_USER};
GRANT USAGE ON SCHEMA api TO web_anon;

CREATE ROLE standard NOLOGIN;
GRANT standard TO ${AUTH2_DB_USER};
GRANT USAGE ON SCHEMA api TO standard;
GRANT SELECT ON api.dataset TO standard;

CREATE ROLE admin NOLOGIN;
GRANT admin TO ${AUTH2_DB_USER};
GRANT ALL ON api.dataset TO admin;

EOSQL
