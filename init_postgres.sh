#!/bin/bash
set -e

psql -v ON_ERROR_STOP=1 <<-EOSQL
CREATE DATABASE ${KEYCLOAK_DB};
DO \$\$
  DECLARE q TEXT;
BEGIN
  q := 'CREATE USER ${KEYCLOAK_DB_USER} WITH PASSWORD ''' || pg_read_file('/run/secrets/keycloak-db-password') || '''';
  EXECUTE q;
  q := 'CREATE USER ${AUTH2_DB_USER} WITH PASSWORD ''' || pg_read_file('/run/secrets/auth2-db-password') || '''';
  EXECUTE q;
END \$\$;
GRANT ALL ON DATABASE ${KEYCLOAK_DB} TO ${KEYCLOAK_DB_USER};

CREATE DATABASE ${AUTH2_DB};
EOSQL

psql -v ON_ERROR_STOP=1 --dbname ${AUTH2_DB} <<-EOSQL
CREATE EXTENSION plpython3u;
CREATE SCHEMA api;

CREATE OR REPLACE FUNCTION api.rest()
 RETURNS text
AS \$\$
    import requests, json
    try:
        r = requests.get("https://api.restful-api.dev/objects")
    except Exception as e:
        return e
    else:
        return r.content
\$\$ LANGUAGE plpython3u;

create table api.todos (
  id int primary key generated by default as identity,
  done boolean not null default false,
  task text not null,
  due timestamptz
);

insert into api.todos (task) values
  ('finish tutorial 0'), ('pat self on back');

create role web_anon nologin;
grant usage on schema api to web_anon;
grant select on api.todos to web_anon;
grant web_anon to ${AUTH2_DB_USER}

EOSQL
